println : cfunc(format : string, ...) -> null;
print : cfunc(format : string, ...) -> null;

City : struct {
	name : string;
	population : int;	
}

Person : struct {
	name : string;
	age : int;
	birth_place : City;
}

print_by_reference : (p : Person) -> null {
	println(
		"printed by reference: %s (age %d) was born in %s, a city with a population of %d.",
		p.name,
		p.age,
		p.birth_place.name,
		p.birth_place.population
	);
}

print_by_pointer : (p : Person^) -> null {
	println(
		"printed by pointer: %s (age %d) was born in %s, a city with a population of %d.",
		(^p).name,
		(^p).age,
		(^p).birth_place.name,
		(^p).birth_place.population
	);
}

grow_older_by_reference : (p : Person, years : int) -> null {
	println("by reference: %s grew %d years older.", p.name, years);
	p.age = p.age + years;
}

grow_older_by_pointer : (p : Person^, years : int) -> null {
	println("by pointer: %s grew %d years older.", (^p).name, years);
	(^p).age = (^p).age + years;
}

main : () -> null {
	
	println("\n\nSpyre example program: passing structs by reference and by pointer\n");

	billy : Person;

	billy.name = "Billy";
	billy.age = 39;
	billy.birth_place.name = "Boston";
	billy.birth_place.population = 656000;

	print_by_reference(billy);
	print_by_pointer(&billy);

	println("");

	grow_older_by_reference(billy, 3);
	grow_older_by_pointer(&billy, 4);

	println("");

	print_by_reference(billy);
	print_by_pointer(&billy);
	
	println("\n");

}
